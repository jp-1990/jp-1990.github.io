{"version":3,"sources":["components/Projects/Project/ProjectImage/ProjectImage.module.css","components/Hero/Title/Title.module.css","components/Nav/Toolbar/Toolbar.module.css","components/Projects/Project/Project.module.css","components/Projects/Project/ProjectText/ProjectText.module.css","components/Projects/Projects.module.css","components/Nav/NavItems/NavItem/NavItem.module.css","components/Nav/NavItems/NavItems.module.css","components/Hero/HeroNav/HeroNav.module.css","components/Hero/Hero.module.css","components/Nav/NavItems/NavItem/NavItem.js","components/Nav/NavItems/NavItems.js","components/Nav/Toolbar/Toolbar.js","components/Layout/Layout.js","components/Hero/Title/Title.js","components/Hero/HeroNav/HeroNav.js","components/Hero/Hero.js","components/Projects/Project/ProjectText/ProjectText.js","components/Projects/Project/ProjectImage/ProjectImage.js","components/Projects/Project/Project.js","components/Projects/Projects.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","navItem","props","className","classes","NavItem","href","children","navItems","styles","NavItems","Toolbar","useState","scrolled","setScrolled","useEffect","window","addEventListener","isTop","scrollY","Hide","layout","title","Title","h1","h2","heroNav","HeroNav","hero","Hero","ProjectText","details","subtitle","description","Text","Buttons","ProjectImage","Image","Img","side","L","R","project","ProjectL","ProjectR","projects","displayProjects","technologies","image","map","el","index","Project","key","Projects","App","Layout","Boolean","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.b7abc0a0.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"Image\":\"ProjectImage_Image__2UlQj\",\"L\":\"ProjectImage_L__laLsa\",\"R\":\"ProjectImage_R__1JLob\",\"Img\":\"ProjectImage_Img__2-sR2\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Title\":\"Title_Title__39Hmn\",\"h1\":\"Title_h1__VkjUs\",\"h2\":\"Title_h2__3qVrG\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Toolbar\":\"Toolbar_Toolbar__x9R7c\",\"toolbar\":\"Toolbar_toolbar__2rAmb\",\"Hide\":\"Toolbar_Hide__18dCR\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ProjectL\":\"Project_ProjectL__2lKmQ\",\"ProjectR\":\"Project_ProjectR__290A8\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Text\":\"ProjectText_Text__DNTej\",\"Buttons\":\"ProjectText_Buttons__2B93U\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Projects\":\"Projects_Projects__3JZ23\",\"h1\":\"Projects_h1__121QL\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"NavItem\":\"NavItem_NavItem__52eZf\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"NavItems\":\"NavItems_NavItems__1kEs0\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"HeroNav\":\"HeroNav_HeroNav__1GvZi\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Hero\":\"Hero_Hero__U7uV4\"};","import React from 'react';\r\nimport classes from './NavItem.module.css';\r\n\r\nconst navItem = (props) => {\r\n  return (\r\n    <li className={classes.NavItem}>\r\n      <a href='/'>{props.children}</a>\r\n    </li>\r\n  );\r\n};\r\n\r\nexport default navItem;\r\n","import React from 'react';\r\nimport NavItem from './NavItem/NavItem';\r\nimport classes from './NavItems.module.css';\r\n\r\nconst navItems = (props) => {\r\n  return (\r\n    <ul className={props.styles || classes.NavItems}>\r\n      <NavItem>About</NavItem>\r\n      <NavItem>Projects</NavItem>\r\n      <NavItem>Skills</NavItem>\r\n    </ul>\r\n  );\r\n};\r\nexport default navItems;\r\n","import React, { useState, useEffect } from 'react';\r\nimport NavItems from '../NavItems/NavItems';\r\nimport classes from './Toolbar.module.css';\r\n\r\nconst Toolbar = () => {\r\n  const [scrolled, setScrolled] = useState(false);\r\n\r\n  useEffect(() => {\r\n    let result;\r\n    window.addEventListener('scroll', () => {\r\n      const isTop = window.scrollY < 520;\r\n\r\n      if (isTop !== true) {\r\n        result = true;\r\n      } else {\r\n        result = false;\r\n      }\r\n      setScrolled(result);\r\n    });\r\n    return () => {};\r\n  }, [scrolled]);\r\n\r\n  return (\r\n    <header>\r\n      <div className={scrolled ? classes.Toolbar : classes.Hide}>\r\n        <nav>\r\n          <NavItems />\r\n        </nav>\r\n      </div>\r\n    </header>\r\n  );\r\n};\r\n\r\nexport default Toolbar;\r\n","import React from 'react';\r\nimport Toolbar from '../Nav/Toolbar/Toolbar';\r\n\r\nconst layout = (props) => {\r\n  return (\r\n    <>\r\n      <Toolbar />\r\n      <main>{props.children}</main>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default layout;\r\n","import React from 'react';\r\nimport classes from './Title.module.css';\r\n\r\nconst title = () => {\r\n  return (\r\n    <div className={classes.Title}>\r\n      <h1 className={classes.h1}>WEB DEVELOPER</h1>\r\n      <h2 className={classes.h2}>James Plummer</h2>\r\n    </div>\r\n  );\r\n};\r\nexport default title;\r\n","import React from 'react';\r\nimport NavItems from '../../Nav/NavItems/NavItems';\r\nimport classes from './HeroNav.module.css';\r\n\r\nconst heroNav = () => {\r\n  return <NavItems styles={classes.HeroNav} />;\r\n};\r\n\r\nexport default heroNav;\r\n","import React from 'react';\r\n\r\nimport Title from './Title/Title';\r\nimport HeroNav from './HeroNav/HeroNav';\r\nimport classes from './Hero.module.css';\r\n\r\nconst hero = () => {\r\n  return (\r\n    <div className={classes.Hero}>\r\n      <Title />\r\n      <HeroNav />\r\n    </div>\r\n  );\r\n};\r\nexport default hero;\r\n","import React from 'react';\r\nimport classes from './ProjectText.module.css';\r\n\r\nconst ProjectText = ({ details }) => {\r\n  const { title, subtitle, description } = details;\r\n  return (\r\n    <div className={classes.Text}>\r\n      <h1>{title}</h1>\r\n      <h2>{subtitle}</h2>\r\n      <p>{description}</p>\r\n      <div className={classes.Buttons}>\r\n        <button>\r\n          <a href='/'>View Code</a>\r\n        </button>\r\n        <button>\r\n          <a href='/'>Visit Site</a>\r\n        </button>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ProjectText;\r\n","import React from 'react';\r\nimport classes from './ProjectImage.module.css';\r\n\r\nconst ProjectImage = (props) => {\r\n  // const colors = {\r\n  //   javascript: '#f7df1e',\r\n  //   nodejs: '#3C873A',\r\n  //   express: '#129cd6',\r\n  //   mongodb: '#589636',\r\n  //   react: '#61DBFB',\r\n  //   html: '#e34c26',\r\n  //   css: '#2965f1',\r\n  // };\r\n  return (\r\n    <div className={classes.Image}>\r\n      <div className={classes.Img}>Image placeholder</div>\r\n      <ul className={props.side === 'left' ? classes.L : classes.R}>\r\n        <li>js</li>\r\n        <li>node</li>\r\n        <li>mongoDB</li>\r\n        <li>express</li>\r\n        <li>react</li>\r\n      </ul>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ProjectImage;\r\n","import React from 'react';\r\nimport classes from './Project.module.css';\r\nimport ProjectText from './ProjectText/ProjectText';\r\nimport ProjectImage from './ProjectImage/ProjectImage';\r\n\r\nconst project = (props) => {\r\n  let output = '';\r\n  if (props.side === 'left') {\r\n    output = (\r\n      <div className={classes.ProjectL}>\r\n        <ProjectText details={props} />\r\n        <ProjectImage side={props.side} />\r\n      </div>\r\n    );\r\n  } else {\r\n    output = (\r\n      <div className={classes.ProjectR}>\r\n        <ProjectImage side={props.side} />\r\n        <ProjectText details={props} />\r\n      </div>\r\n    );\r\n  }\r\n\r\n  return output;\r\n};\r\n\r\nexport default project;\r\n","import React from 'react';\r\nimport Project from './Project/Project';\r\nimport classes from './Projects.module.css';\r\n\r\nconst projects = () => {\r\n  const projectsArray = [\r\n    {\r\n      title: 'Task Tracker',\r\n      subtitle: 'My first project',\r\n      description: `While I was initially learning to code I was tracking my learning time using spreadsheets, but the format was not ideal for my purposes. With that in mind, I thought I would consolidate my knowledge by creating a web application to solve this problem.`,\r\n      technologies: [\r\n        'html',\r\n        'css',\r\n        'javascript',\r\n        'nodejs',\r\n        'express',\r\n        'mongodb',\r\n      ],\r\n      image: null,\r\n    },\r\n    {\r\n      title: 'Placeholder test',\r\n      subtitle: 'Testing dynamic generation',\r\n      description: `While I was initially learning to code I was tracking my learning time using spreadsheets, but the format was not ideal for my purposes. With that in mind, I thought I would consolidate my knowledge by creating a web application to solve this problem.`,\r\n      technologies: ['html', 'css', 'javascript', 'react'],\r\n      image: null,\r\n    },\r\n    {\r\n      title: 'Second test',\r\n      subtitle: 'Testing generation again',\r\n      description: `While I was initially learning to code I was tracking my learning time using spreadsheets, but the format was not ideal for my purposes. With that in mind, I thought I would consolidate my knowledge by creating a web application to solve this problem.`,\r\n      technologies: [\r\n        'html',\r\n        'css',\r\n        'javascript',\r\n        'react',\r\n        'nodejs',\r\n        'mongodb',\r\n        'express',\r\n      ],\r\n      image: null,\r\n    },\r\n  ];\r\n\r\n  const displayProjects = projectsArray.map((el, index) => {\r\n    return (\r\n      <Project\r\n        key={`${el.title}${index}`}\r\n        title={el.title}\r\n        subtitle={el.subtitle}\r\n        description={el.description}\r\n        technologies={el.technologies}\r\n        image={el.image}\r\n        side={index % 2 === 0 ? 'left' : 'right'}\r\n      />\r\n    );\r\n  });\r\n\r\n  return (\r\n    <div className={classes.Projects}>\r\n      <h1 className={classes.h1}>PROJECTS</h1>\r\n      {displayProjects}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default projects;\r\n","import React from 'react';\nimport Layout from './components/Layout/Layout';\nimport Hero from './components/Hero/Hero';\nimport Projects from './components/Projects/Projects';\n\nconst App = () => {\n  return (\n    <Layout>\n      <Hero />\n      <Projects />\n      <div>ABOUT</div>\n      <div>SKILLS</div>\n    </Layout>\n  );\n};\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}